Hire cRaft 残タスク
・ファイル関連の保存機能実装（Fileテーブルも使用）
・細かいスタイルやテンプレート、ルートの修正

済
・文字起こし機能の実装→済
・傾向分析機能の実装→済
・ダッシュボード機能→済
・文字全文の登録→済
・テーブルの更新→済
・面接一覧の並び替え（今日の面接が上部に別カードで、下部に一覧＋フィルター機能実装）→済
・設定→ユーザー一覧＆作成、(Deepgramの)パラメータ設定変更→済
・ホームページの応募者数のロジック→済
・インポート機能、エクスポート機能→済
・インポートテンプレートのダウンロード→済
・選考一覧デフォルトの並びを、実施日順にする→済
・日時（選考詳細に遷移する）、ステップ、候補者、応募日(候補者テーブル)、選考ポジション(候補者テーブル)、ステータス、合否、AIスコア→済
1. 候補者の項目整理（ダッシュボード分析を前提に）→8/14完了
2. ダッシュボード機能の実装→8/16完了
3. 新データベースにアプリを更新→8/16完了
4. 録音の記録（まず文字起こし）→8/16完了
5. 文字の要約（GPT）→8/16完了
6. 間や抑揚の解析（他API）→8/18完了
7. 分析結果画面（レーダーチャート）の実装→8/18完了
8. 選考ステップの拡充（新着応募→内定承諾）、内定、内定承諾のボタン、入社日の設定ができるように

業務フロー
1. 応募があった段階で、応募者を登録（ステータス：新着応募）
2. 書類選考を実施（ステータス：選考中or不合格）
3. 面接を実施し、録音データを取り込んでAI評価を実施する
4. AI総合評価を更新する
5. AI評価と面接官判断で、合否を判定する
6. 3と4と5を最終面接まで繰り返す
7. 最終面接を通過したら、内定日を入力（ステータス：内定）
8. 内定を承諾したら、内定承諾日を入力（ステータス：内定承諾）
9. 入社日の調整ができたら、入社日を入力

Deepgram実装
1. 環境チェック＆スモーク実行を代行（あなたの仮想環境や flask 起動コマンドを教えてください／もしくは私が推奨コマンドを提示して実行してもらう）
2. dg_transcribe に utterances/words/summary 等を DB に確実に保存する（既存 interviews テーブルに列が無ければ migration 提案）
3. analyze → 現状の evaluate ジョブへの統合（evaluate ジョブが ai_score / raw_metrics を参照するように接続）を実装する（自動化の流れ作成）
4. Deepgram の SDK を用いたストリーミング/より堅牢な実装に移行する

今回の提案と次のアクション:

- DBマイグレーション: `transcripts` テーブルに `utterances JSON NULLABLE` と `metrics JSON NULLABLE` を追加
	- 実行: `alembic revision --autogenerate -m "add transcripts utterances and metrics"` して `alembic upgrade head`

- 非破壊的テスト: 既存の録音でトランスクリプトジョブを手動実行して `transcripts` レコードに `utterances` と `metrics` が追加されることを確認

- オプション: フィラー語の拡張、無音閾値や割り込み閾値の調整を行う

次にやることを選んでください:
1) ワークスペースに alembic revision を作るパッチを適用してほしい
2) あなたのローカルで手動で既存レコードを試してほしい（コマンドを提示します）
3) 追加の話し方指標（例: 語尾の伸ばし検出、話者ごとのWPM/CPM精度向上）を自動で追加してほしい
4) 別案・質問がある

遷移編集
・interview/detailのキャンセルボタン→一覧へ
・